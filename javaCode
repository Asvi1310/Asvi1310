---------------------------------------------------JAVA CODE-------------------------------------
1. PRIME NUMBER 
--------------------

public class Main
{
	public static void main(String[] args) {
   
   int num=4;
   
   int count=0;

   for(int i=1; i<=num; i++){
       if(num%i == 0){
           count++;
       }
   }if(count == 2 && !(num <2) ){
       System.out.println("prime");
   }else{
       System.out.println("not prime");
   }
	
	}
}



2.  PALINDROME NUMBER
-------------------------
public class Main
{
	public static void main(String[] args) {
   
   int num =121;
   int temp =num;
   int rev=0;
   
    while(num >0){
        rev = rev*10+num%10;
        num=num/10;
    }
    if(rev==temp){
	System.out.println("palindrome");
    }else{
        System.out.println("not a palindrome");
    }
	}
}


3. PALINDROME String
--------------------------
public class Main
{
	public static void main(String[] args) {
   
 
  String str ="madam";
  
  String rev="";
  
  for(int i=str.length()-1;i>=0;i-- ){
      rev=rev+str.charAt(i);
  }
  if(rev.equals(str)){
      System.out.println("palindrome");
  }else{
      System.out.println("not a palindrome");
  }
}
}


4. FACTORIAL 
-------------------
public class Main
{
	public static void main(String[] args) {
		
		int num =5;
		
		int fact=1;
		
		for(int i=1;i<=num;i++){
		    fact = fact*i;
		}
		System.out.println(fact);
	}
}



5. ARMSTRONG 
-----------------
public class Main
{
	public static void main(String[] args) {
		
		int num =371;
		int temp=num;
	 int arm=0, rev=0;
	
	 while(num>0){
	     rev = num%10;
	     
	    arm = arm + (rev*rev*rev);
	    
	    num=num/10;
	 }
	   if(temp ==  arm){
	       System.out.println("armstrong");
	   }else{
	       System.out.println("not an armstrong");
	   }
	}
}



6. Program to copy all elements of one array into another array
------------------------------------------------------------------------------
public class Main
{
	public static void main(String[] args) {
		
		int[] arr1={1,2,3,4};
		
		int[] arr2=new int[arr1.length];
		
		for(int i=0; i<arr1.length;i++){
		    arr2[i] = arr1[i];
		}
	
	for(int i=0;i<arr2.length;i++){
	    System.out.print(arr2[i]);
	}
	}
}


7.Program to find the frequency of each element in the array
----------------------------------------------------------------------------
public class Main{
	public static void main(String[] args) {
		
		int[] arr1=new int[]{1,2,3,4,5,3,2};
		
		int[] arr2 = new int[arr1.length];
		
		int visited = -1;
	
		for(int i=0; i<arr1.length; i++){
		    int count=1;
		    for(int j=i+1; j<arr1.length; j++){
		        if (arr1[i]==arr1[j]){
		            count++;
		            arr2[j]=visited;
		            
		        } 
		    }
		if(arr2[i] != visited)
		    arr2[i] = count;
	}
		
		for(int i=0; i<arr2.length; i++){
		    if(arr2[i] != visited)
		        System.out.println(" "+ arr1[i]+ " "+ arr2[i]);
		    
		    }
	
		}
	}



8. Program to left rotate the elements of an array
---------------------------------------------------------------------

public class Main{
	public static void main(String[] args) {
		
		int[] arr1=new int[]{1,2,3,4,5,3,2};
		
		int n=3;
		
		for(int i=0; i<n;i++){
		    int j,temp;
		   temp=arr1[0];
		   for(j=0; j<arr1.length-1;j++){
		       arr1[j] = arr1[j+1];   
		   }
		   arr1[j]= temp;
		}
		for(int i=0;i<arr1.length;i++){
		    System.out.print(arr1[i]);
		 }
	   }
	}


9. Java Program to sort the elements of an array in descending order
------------------------------------------------------------------------------------
public class Main
{
	public static void main(String[] args) {
		
		int[] arr = new int[]{2,3,4,1,2,3};
		
		int temp=0;
		for(int i=0; i<arr.length;i++){
		    for(int j=i+1; j<arr.length; j++){
		        
		      if(arr[i]>arr[j]){
		          
		          temp = arr[i];
		          arr[i] = arr[j];
		          arr[j] = temp;
		      }
		    }
		}
		    for( int i=arr.length-1; i>=0;i--){
		        System.out.print(arr[i]);
		 
		}
	}
}


10. Java Program to sort the elements of an array in ascending order
------------------------------------------------------------------------------------
public class Main
{
	public static void main(String[] args) {
		
		int[] arr = new int[]{2,3,4,1,2,3};
		
		int temp=0;
		for(int i=0; i<arr.length;i++){
		    for(int j=i+1; j<arr.length; j++){
		        
		      if(arr[i]>arr[j]){
		          
		          temp = arr[i];
		          arr[i] = arr[j];
		          arr[j] = temp;
		      }
		    }
		}
		    for( int i=0; i<arr.length;i++){
		        System.out.print(arr[i]);
		 
		}
	}
}


11. Java Program to Remove Duplicate Element in an array
----------------------------------------------------------------------------------------
public class Main
{
	public static void main(String[] args) {
		
		int[] arr = new int[]{2,3,4,1,2,3};
		
		int temp=-1;
		for(int i=0; i<arr.length;i++){
		    for(int j=i+1; j<arr.length; j++){
		        
		      if(arr[i]==arr[j]){
		          
		      arr[j]=temp;
		        
		      }
		    }
		}
		    for( int i=0; i<arr.length;i++){
		        if(arr[i] != temp)
		        System.out.print(arr[i]);
		 
		}
	}
}


12. Java Program to merge arrays in an array
------------------------------------------------------------------------------------------
public class Main
{
	public static void main(String[] args) {
		
		int[] arr1 = new int[]{2,3,4,1,2,3};
		int[] arr2 = new int[]{11,12,13,13};
		
		int arr1Length = arr1.length;
	    int arr2Length = arr2.length;
	    
	    int[] result = new int[arr1Length + arr2Length];
	    
	    int index=0;
	    
	    for(int i=0; i<arr1.length;i++){
	        result[index] = arr1[i];
	        index++;
	    }
	    
	    for(int i=0; i<arr2.length;i++){
	        result[index] = arr2[i];
	        index++; 
	    }
	    
	    for(int i=0; i<result.length;i++){
	       System.out.print(result[i]+ " ");
	    }
		
		}
	}


13. Java Program to right rotate the elements of an array
-----------------------------------------------------------
public class Main{
	public static void main(String[] args) {
		
		int[] arr1=new int[]{1,2,3,4,5,3,2};
		
		int n=3;
		
		for(int i=0; i<n;i++){
		    int j,last;
		   last=arr1[arr1.length-1];
		   for(j=arr1.length-1; j>0;j--){
		       arr1[j] = arr1[j-1];
		       
		   }
		   arr1[0]= last;
		}
		for(int i=0;i<arr1.length;i++){
		    System.out.print(arr1[i]);
		 }
	   }
	}


14. Java Program to find Largest Number in an Array
------------------------------------------------------------------------
public class Main{
	public static void main(String[] args) {
		
		int[] arr1=new int[]{1,2,3,4,5,9,8};
		
		int temp =0;
		
		for(int i=0; i<arr1.length;i++){
		    for(int j=i+1; j<arr1.length;j++){
		        if(arr1[i]>arr1[j]){
		            temp= arr1[i];
		            arr1[i]=arr1[j];
		            arr1[j]=temp;
		        }
		    }
		}
	    System.out.println(arr1[arr1.length-1]);
		}
	}


15.Java Program to Find 2nd Largest Number in an array
-------------------------------------------------------------------------------
public class Main{
	public static void main(String[] args) {
		
		int[] arr1=new int[]{1,2,3,4,5,9,8};
		
		int temp =0;
		
		for(int i=0; i<arr1.length;i++){
		    for(int j=i+1; j<arr1.length;j++){
		        if(arr1[i]>arr1[j]){
		            temp= arr1[i];
		            arr1[i]=arr1[j];
		            arr1[j]=temp;
		        }
		    }
		}
	    System.out.println(arr1[arr1.length-2]);
		}
	}



16. Java Program to Find 3rd Largest Number in an array
---------------------------------------------------------------------
public class Main{
	public static void main(String[] args) {
		
		int[] arr1=new int[]{1,2,3,4,5,9,8};
		
		int temp =0;
		
		for(int i=0; i<arr1.length;i++){
		    for(int j=i+1; j<arr1.length;j++){
		        if(arr1[i]>arr1[j]){
		            temp= arr1[i];
		            arr1[i]=arr1[j];
		            arr1[j]=temp;
		        }
		    }
		}
	    System.out.println(arr1[arr1.length-3]);
		}
	}


17. Program to print the largest element in an array
-------------------------------------------------------------------
public class Main{
	public static void main(String[] args) {
		
		int[] arr1=new int[]{1,2,3,4,5,9,8};
		
		int max = arr1[0];
		
		for(int i=0; i<arr1.length;i++){
		   if(arr1[i]>max){
		       max=arr1[i];
		   }
		}
	    System.out.println(max);
		}
	}

18.Program to print the smallest element in an array
--------------------------------------------------------------------
public class Main{
	public static void main(String[] args) {
		
		int[] arr1=new int[]{55,2,3,4,5,9,8};
		
		int min = arr1[0];
		
		for(int i=0; i<arr1.length;i++){
		   if(arr1[i]<min){
		       min=arr1[i];
		   }
		}
	    System.out.println(min);
		}
	}


19. Program to print resized an array
----------------------------------------------------------------

public class Main
{
	public static void main(String[] args) {
	 int[] arr1 = {1,2,3,4};
	 
	 int[] arr2 = new int[arr1.length*2];
	 
	 for(int i=0; i<arr1.length; i++){
	      arr2[i] = arr1[i];
	 }
	 for(int i=0; i<arr2.length; i++){
	     System.out.print(arr2[i] + " ");
	 }
	}
}


20. Program to print missing natural number from an array
---------------------------------------------------------------

public class Main
{
	public static void main(String[] args) {
	 int[] arr1 = {1,2,3,4,5,7};
	 
     int n = arr1.length + 1;
     int sumNaturalNo = n * (n+1)/2;
     int missingNo=0;
     for( int num : arr1){
         
        sumNaturalNo = sumNaturalNo - num; 
        missingNo = sumNaturalNo;
       }
       System.out.println("Missing natural no: "+missingNo);
	 
	}
}

21. Bubble sort
--------------------------------------------------------------------

public class Main
{
	public static void main(String[] args) {
		
		int[] arr = {2,4,5,7,2,8,3,9};
		
		int n= arr.length;
		
		int temp=0;
		
		for(int i=0; i<n-1;i++){
		    for(int j=0; j<n-1-i; j++){
		          if(arr[j] >  arr[j+1]){
    		        temp = arr[j];
    		        arr[j] = arr[j+1];
    		        arr[j+1] = temp;
    		    }
		}
	}
		for(int k=0; k<n; k++){
		    System.out.print(arr[k]);
	    	}
		
	}
}


22. Print the frequency of occurrence of char in a string
----------------------------------------------------------------------
import java.util.*;  
public class Main{
	public static void main(String[] args) {
		
		
		String str ="ashish";
		char[] ch = str.toCharArray();
		    
		    HashMap<Character, Integer> map = new HashMap<Character, Integer>();
		    
		    for(char k: ch){
		        if(!map.containsKey(k)){
		            map.put(k, 1);
		        }else{
		            map.put(k, map.get(k)+1);
		        }
		    }
		    
		    for(Map.Entry m : map.entrySet()){
		        System.out.println(" "+ m.getKey()+" "+ m.getValue());
		    }
		    
		}
	}


23. Print the frequency of occurrence of words in a string array
----------------------------------------------------------------------
import java.util.*;  
public class Main{
	public static void main(String[] args) {
		
		
		String[] str = {"ashish", "kumar", "ashish", "sunny", "kumar"};
		    
		    HashMap<String, Integer> hm = new HashMap<String, Integer>();
		    
		    for(String str1: str){
		        if(!hm.containsKey(str1)){
		            hm.put(str1, 1);
		        }else{
		            hm.put(str1, hm.get(str1)+1);
		        }
		    }
		    
		    for(Map.Entry m : hm.entrySet()){
		        System.out.println(" "+ m.getKey()+" "+ m.getValue());
		    }
		    
		}
	}

23. Print the frequency of occurrence of numbers in an integer array
----------------------------------------------------------------------
import java.util.*;  
public class Main{
	public static void main(String[] args) {
		
		
		int[] num = {1,2,5,2,1,2,3,5,6,4};
		    
		    HashMap<Integer, Integer> map = new HashMap<Integer, Integer>();
		    
		    for(int k: num){
		        if(!map.containsKey(k)){
		            map.put(k, 1);
		        }else{
		            map.put(k, map.get(k)+1);
		        }
		    }
		    
		    for(Map.Entry m : map.entrySet()){
		       
		        System.out.println("Key "+ m.getKey()+" :"+ " Value "+ m.getValue());
		    }
		    
		}
	}



24. Print the value which is greater than given occurrence in a array
----------------------------------------------------------------------

import java.util.*;  
public class Main{
	public static void main(String[] args) {
		
		
		int[] num = {1,2,5,2,1,2,3,5,6,4};
		    
		    HashMap<Integer, Integer> map = new HashMap<Integer, Integer>();
		    
		    for(int k: num){
		        if(!map.containsKey(k)){
		            map.put(k, 1);
		        }else{
		            map.put(k, map.get(k)+1);
		        }
		    }
		    
		    for(Map.Entry m : map.entrySet()){
		        int val = (Integer)m.getValue();
		        if(val>2){
		        System.out.println("Key "+ m.getKey()+" :"+ " Value "+ m.getValue());
		      }
		    }
		    
		}
	}


25. Find the min no from integer array
-----------------------------------------------------------------------------------------------------------
public class Main
{
	public static void main(String[] args) {
	 int[] arr1 = {1,2,3,4,5,4,3};
	 
	 int min=0;
	 for(int i=0; i<arr1.length-1; i++){
	    if(arr1[i] < arr1[i+1]){
	        min = arr1[i];
	        arr1[i+1] = arr1[i];
	        arr1[i] = min;
	    }
	 }
	 
	 System.out.println(min);
	 
	}
}

26. Find the max no from integer array
-----------------------------------------------------------------------------------------------------------
public class Main
{
	public static void main(String[] args) {
	 int[] arr1 = {1,2,3,4,5,4,3};
	 
	 int max=0;
	 for(int i=0; i<arr1.length-1; i++){
	    if(arr1[i] > arr1[i+1]){
	        max = arr1[i];
	        arr1[i+1] = arr1[i];
	        arr1[i] = max;
	    }
	 }
	 
	 System.out.println(max);
	 
	}
}


27. Find common elements from 3 diff arrays
---------------------------------------------------
import java.util.HashSet;
import java.util.Set;

public class Main
{
	public static void main(String[] args) {
	 
	 int[] a1= {1,2,3,1};
	 int[] a2={1,3,3};
	 int[] a3={1,1,3,4};

	 Set<Integer> set1 = new HashSet<>();
	 	 Set<Integer> set2 = new HashSet<>();
	 	 	 Set<Integer> set3 = new HashSet<>();
	 
	 for(int num : a1){
	     set1.add(num);
	 }
	 
	  for(int num : a2){
	    set2.add(num);
	 }
	 
	  for(int num : a3){
	     set3.add(num);
	 }
	 
	 set1.retainAll(set2);
	 set1.retainAll(set3);
	 
	 System.out.print(set1);
	 
	 
	}
}

28: Print the occurrence of word from a string
-------------------------------------------------------------
import java.util.*;

public class Main
{
	public static void main(String[] args) {
	 
     String str = "I am a java developer and I am proud of it";
     
     String[] words = str.split(" ");
     
     HashMap<String, Integer> map= new HashMap<String,Integer>();
     
     for(String word : words){
         if(!map.containsKey(word)){
             map.put(word,1);
         }else{
             map.put(word,map.get(word)+1);
         }
     }
     
     for(Map.Entry entry:map.entrySet()){
        System.out.println(entry.getKey()+":"+ entry.getValue());
     }

	}
}


29. Fionacci NUMBER
---------------------------------------------------------------------------------
public class Main
{
	public static void main(String[] args) {
	  int num = 11;
	  int num1 = 0, num2=1, num3=0;
	  System.out.print(num1 + " " + num2);
	 for(int i=1;i<=num;i++){
	       num3 = num1+num2;
	       System.out.print(" "+num3);
	       num1 = num2;
	       num2 = num3;
	  }
	}
}

30. Find number is Automorphic or not
----------------------------------------------------
public class Main
{
	public static void main(String[] args) {
	  int num = 625;
	  
	  int intSize = String.valueOf(num).length(); // finding length of integer 
	  
	      int sqrNum = num*num; 
	      int count=0;
	     
            for(int i=0; i<intSize; i++){
	          if(sqrNum%10 != num%10){
	             break;
	          }else{
	               sqrNum = sqrNum/10;
	               num=num/10;
	          	   count++;
	          }
          }
            if(intSize>=2 &&  count>=2 || intSize == 1 && count == 1 ){
                System.out.println("automorphic");
            }else{
                   System.out.println("not automorphic");
        }
	}
}


31. Print each element at index i of the result is the product of all the elements in nums except nums[i].
----------------------------------------------------------------------------------------------------------
public class Main
{
	public static void main(String[] args) {
		
	   int[] arr = {1,3,5,2};
	   
	   int len = arr.length;
	   int mul; 
	   
	  for(int i=0 ;i<len; i++){
	      mul=1;
	      for(int j=0; j<len; j++){
	          if(arr[i] != arr[j]){
	          mul = mul * arr[j];
	      }
	     }
	     System.out.print(" "+mul);
	  }
	}
}


32. Given an integer array of nums soreted in non- decreasing order, return an array of the square of each number 
------------------------------------------------------------------------------------------------------------------------------

import java.util.*;
public class Main
{
	public static void main(String[] args) {
		
	   int[] arr = {-8,-3,1,3,7};

	   int len = arr.length;
	    
	   int[] res = new int[len];

	   int temp=0;

	    for(int i=0; i<len; i++){
	     res[i] = Math.abs(arr[i]*arr[i]);
	    }
	     for(int i=0; i<len; i++){
	      for(int j=i+1; j<len; j++){
	          if(res[i]>res[j]){
	              temp = res[i];
	              res[i] =  res[j];
	              res[j] = temp;
	        }
	      }
	    }
	  for(int i=0; i<len; i++){
	    System.out.print(res[i]+ " ");
	   }
    }
}
